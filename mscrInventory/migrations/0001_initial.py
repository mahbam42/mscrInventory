# Generated by Django 5.2.7 on 2025-10-10 01:43

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('unit_type', models.CharField(choices=[('oz', 'Ounce'), ('lb', 'Pound'), ('fl_oz', 'Fluid Ounce'), ('unit', 'Unit'), ('g', 'Gram'), ('kg', 'Kilogram')], default='unit', max_length=16)),
                ('current_stock', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=12)),
                ('case_size', models.PositiveIntegerField(blank=True, help_text='Units per case, if applicable.', null=True)),
                ('reorder_point', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=12)),
                ('lead_time', models.PositiveIntegerField(blank=True, help_text='Lead time in days', null=True)),
                ('average_cost_per_unit', models.DecimalField(decimal_places=6, default=Decimal('0.000000'), max_digits=12)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(help_text='Platform-specific order id', max_length=255)),
                ('platform', models.CharField(choices=[('shopify', 'Shopify'), ('square', 'Square')], max_length=32)),
                ('order_date', models.DateTimeField()),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('data_raw', models.JSONField(blank=True, null=True)),
                ('synced_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-order_date'],
                'unique_together': {('order_id', 'platform')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sku', models.CharField(max_length=128, unique=True)),
                ('shopify_id', models.CharField(blank=True, max_length=128, null=True)),
                ('square_id', models.CharField(blank=True, max_length=128, null=True)),
                ('category', models.CharField(blank=True, max_length=128)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'indexes': [models.Index(fields=['sku'], name='mscrInvento_sku_248e43_idx'), models.Index(fields=['shopify_id'], name='mscrInvento_shopify_36b4b8_idx'), models.Index(fields=['square_id'], name='mscrInvento_square__efb12d_idx')],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='mscrInventory.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mscrInventory.product')),
            ],
        ),
        migrations.CreateModel(
            name='StockEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_added', models.DecimalField(decimal_places=3, max_digits=12)),
                ('cost_per_unit', models.DecimalField(decimal_places=6, max_digits=12)),
                ('date_received', models.DateTimeField(default=django.utils.timezone.now)),
                ('source', models.CharField(choices=[('purchase', 'Purchase'), ('adjustment', 'Adjustment'), ('correction', 'Correction')], default='purchase', max_length=32)),
                ('note', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_entries', to='mscrInventory.ingredient')),
            ],
            options={
                'ordering': ['-date_received'],
            },
        ),
        migrations.CreateModel(
            name='IngredientUsageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('quantity_used', models.DecimalField(decimal_places=3, max_digits=12)),
                ('source', models.CharField(choices=[('shopify', 'Shopify'), ('square', 'Square'), ('manual', 'Manual')], default='manual', max_length=32)),
                ('calculated_from_orders', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_logs', to='mscrInventory.ingredient')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('ingredient', 'date', 'source')},
            },
        ),
        migrations.CreateModel(
            name='RecipeItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_per_unit', models.DecimalField(decimal_places=3, help_text='Amount of ingredient used per 1 product unit', max_digits=12)),
                ('unit_type', models.CharField(blank=True, help_text='Optional override (e.g., fl_oz vs oz)', max_length=16, null=True)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recipe_items', to='mscrInventory.ingredient')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_items', to='mscrInventory.product')),
            ],
            options={
                'unique_together': {('product', 'ingredient')},
            },
        ),
    ]
